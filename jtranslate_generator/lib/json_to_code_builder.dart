
import 'dart:convert';

import 'package:build/build.dart';

class JsonToCodeBuilder extends Builder{

  final BuilderOptions options;

  JsonToCodeBuilder(this.options);

  @override
  Map<String, List<String>> get buildExtensions => {
    '.json': ['.g.dart']
  };

  @override
  Future<void> build(BuildStep buildStep) async {
    //print(options.config);
    //var config = options.config;

    var inputId = buildStep.inputId;

    var copy = inputId.changeExtension('.g.dart');
    var contents = await buildStep.readAsString(inputId);

    Map<String, dynamic> iter = jsonDecode(contents);
    StringBuffer buffer = StringBuffer();

    iter.forEach((String key, dynamic value) {
      buffer.writeln("  // ${key} = ${value}");
      buffer.writeln("  static const String ${_applyStyle(key)} = \"${key}\";");
    });

    String dartContent = """
    
// THIS CODE WAS GENERATED BY JTRANSLATE - DO NOT EDIT BY HAND
class TranslationKeys{

${buffer.toString()}
}""";

    await buildStep.writeAsString(copy, dartContent);
  }

  String _applyStyle(String input){
    return "${input[0].toLowerCase()}${input.substring(1)}";
  }
}